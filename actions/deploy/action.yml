name: 'Deploy Serverless'
description: |
  Deploys serverless application to AWS

inputs:
  stack-name:
    description: |
      Stack name
    default: 'sample2'
  aws-account-id:
    description: |
      AWS access key id
    required: true
  aws-access-key-id:
    description: |
      AWS access key id
    required: true
  aws-secret-access-key:
    description: |
      AWS secret access key
    required: true
  aws-region:
    description: |
      AWS region
    required: true
  on-failure:
    description: |
      On failure
    default: 'DELETE'

runs:
  using: "composite"

  steps:
    - uses: actions/setup-python@v3

    - uses: aws-actions/setup-sam@v2

    - name: 'AWS Login'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: 'Deploy CloudFormation Stack'
      shell: bash
      env:
        AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_REGION: ${{ inputs.aws-region }}
        STACK_NAME: ${{ inputs.stack-name }}
        ON_FAILURE: ${{ inputs.on-failure }}
        REPO: ${{ inputs.stack-name }}
      run: |
        sam build \
          --config-env dev \
          --template-file template.yml \
          --region $AWS_REGION \
          --parameter-overrides AwsAccountId=$AWS_ACCOUNT_ID AwsSecretAccessKey=$AWS_SECRET_ACCESS_KEY AwsAccessKeyId=$AWS_ACCESS_KEY_ID AwsRegion=$AWS_REGION
        
        sam deploy \
          --config-env dev \
          --template-file template.yml \
          --stack-name $STACK_NAME \
          --on-failure $ON_FAILURE \
          --capabilities CAPABILITY_NAMED_IAM \
          --resolve-s3 \
          --resolve-image-repos \
          --s3-prefix sam-$REPO \
          --parameter-overrides AwsAccountId=$AWS_ACCOUNT_ID AwsSecretAccessKey=$AWS_SECRET_ACCESS_KEY AwsAccessKeyId=$AWS_ACCESS_KEY_ID AwsRegion=$AWS_REGION \
          --region $AWS_REGION
        
        STATUS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackStatus' --output text)
        
        if [ $STATUS == 'CREATE_COMPLETE' ] || [ $STATUS == 'UPDATE_COMPLETE' ]; then
          echo "Deployment succeeded"
          exit 0
        else
          echo "Deployment failed"
          exit 1
        fi