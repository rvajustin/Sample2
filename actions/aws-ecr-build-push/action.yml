name: 'Build and Push Image to AWS ECR'
description: |
  Builds and pushes a Docker image to AWS ECR

inputs:
  image-name:
    description: |
      The name of the image that will be built and pushed
    required: true
  file:
    description: |
      The Dockerfile to use for building the image
    required: false    
  context:
    description: |
      The context of the Dockerfile
    default: '.'
    required: false
  aws-access-key-id:
    description: >-
      AWS Access Key ID. This input is required if running in the GitHub hosted environment.
      It is optional if running in a self-hosted environment that already has AWS credentials,
      for example on an EC2 instance.
    required: false
  aws-secret-access-key:
    description: >-
      AWS Secret Access Key. This input is required if running in the GitHub hosted environment.
      It is optional if running in a self-hosted environment that already has AWS credentials,
      for example on an EC2 instance.
    required: false
  aws-region:
    description: 'AWS Region, e.g. us-east-2'
    required: true
  version:
    description: |
      The version of the image to build and push
    required: false
    

runs:
    
  using: "composite"
    
  steps:
    - name: 'Configure AWS'
      uses: './actions/aws-configure'
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.role-to-assume }}
        
    - name: 'Login to Amazon ECR'
      id: login-ecr
      uses: 'aws-actions/amazon-ecr-login@v1'
        
    - name: 'Build, Tag, and Push Image to AWS ECR'
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ inputs.image-name }}
        IMAGE_TAG: latest
      run: |
        cd ${{ inputs.context }}
        docker build \
          -t $REGISTRY/$REPOSITORY:latest \
          -t $REGISTRY/$REPOSITORY:v${{ inputs.version }} \
          -t $REGISTRY/$REPOSITORY:${{ github.sha }} \
          -f ${{ inputs.file }} \
          --build-arg AWS_ACCESS_KEY_ID=${{ inputs.aws-access-key-id }} \
          --build-arg AWS_SECRET_ACCESS_KEY=${{ inputs.aws-secret-access-key }} \
          --build-arg AWS_REGION=${{ inputs.aws-region }} \
          --progress=plain \
          --no-cache .
        docker push $REGISTRY/$REPOSITORY --all-tags
        
        